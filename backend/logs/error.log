{"action":"token_refresh","category":"error","environment":"development","error":"jwt malformed","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"JsonWebTokenError: jwt malformed\n    at module.exports [as verify] (C:\\Src\\fulldeck\\backend\\node_modules\\jsonwebtoken\\verify.js:70:17)\n    at Object.onRefreshToken [as refreshToken] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:464:25)\n    at onMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:682:21)\n    at WebSocket.<anonymous> (C:\\Src\\fulldeck\\backend\\src\\websocket\\server.js:37:11)\n    at WebSocket.emit (node:events:518:28)\n    at Receiver.receiverOnMessage (C:\\Src\\fulldeck\\backend\\node_modules\\ws\\lib\\websocket.js:1220:20)\n    at Receiver.emit (node:events:518:28)\n    at Receiver.dataMessage (C:\\Src\\fulldeck\\backend\\node_modules\\ws\\lib\\receiver.js:596:14)\n    at Receiver.getData (C:\\Src\\fulldeck\\backend\\node_modules\\ws\\lib\\receiver.js:496:10)\n    at Receiver.startLoop (C:\\Src\\fulldeck\\backend\\node_modules\\ws\\lib\\receiver.js:167:16)","timestamp":"2025-07-03T17:37:05.674Z","userId":null}
{"action":"token_refresh","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:501:38\n\n  498 const prisma = new PrismaClient()\n  499 \n  500 // Verify user still exists\n→ 501 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:501:38\n\n  498 const prisma = new PrismaClient()\n  499 \n  500 // Verify user still exists\n→ 501 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onRefreshToken [as refreshToken] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:501:18)","timestamp":"2025-07-04T13:03:19.055Z","userId":null}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:24:42.008Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:24:42.009Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:24:42.009Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:24:42.009Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:26:21.468Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:26:21.468Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:26:21.469Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:26:41.512Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:33:04.269Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:33:04.269Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:33:49.786Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:41:06.113Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:42:25.611Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:42:25.611Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:50:06.628Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:50:06.628Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:50:06.629Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:50:06.629Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:50:06.629Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:50:06.629Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:50:06.629Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T13:50:21.581Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:02:56.124Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:02:56.124Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:02:56.125Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:03:22.249Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:14:51.993Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:18:21.290Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:19:29.713Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:19:29.713Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:19:29.713Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:19:29.714Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:19:29.714Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:20:11.790Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:20:11.790Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:21:15.073Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:23:10.115Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:25:10.920Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:25:10.920Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:25:10.921Z","username":"s"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:30:02.126Z","username":"sweetyeetus"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:38\n\n  180 const bcrypt = require('bcryptjs')\n  181 logger.logDebug('Login: Looking up user', { username: data.username });\n  182 // Find user by username\n→ 183 const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:183:18)","timestamp":"2025-07-04T14:40:31.194Z","username":"sweetyeetus"}
{"action":"update_player_balance","category":"error","environment":"development","error":"logger.logBalanceChange is not a function","level":"error","message":"Error occurred","metadata":{"betAmount":100},"newBalance":9900,"reason":"bet_placed","service":"fulldeck-backend","stack":"TypeError: logger.logBalanceChange is not a function\n    at updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:43:12)\n    at async Object.onPlaceBet [as placeBet] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:223:7)","timestamp":"2025-07-04T22:11:12.850Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"place_bet","betAmount":100,"category":"error","environment":"development","error":"logger.logBalanceChange is not a function","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"TypeError: logger.logBalanceChange is not a function\n    at updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:43:12)\n    at async Object.onPlaceBet [as placeBet] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:223:7)","timestamp":"2025-07-04T22:11:12.850Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"token_refresh","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:400:32\n\n  397 const prisma = new PrismaClient()\n  398 \n  399 // Verify user still exists\n→ 400 user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:400:32\n\n  397 const prisma = new PrismaClient()\n  398 \n  399 // Verify user still exists\n→ 400 user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onRefreshToken [as refreshToken] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:400:12)","timestamp":"2025-07-15T18:51:07.237Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"login","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:114:38\n\n  111 try {\n  112   const bcrypt = require('bcryptjs')\n  113   // Find user by username\n→ 114   const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:114:38\n\n  111 try {\n  112   const bcrypt = require('bcryptjs')\n  113   // Find user by username\n→ 114   const user = await prisma.player.findUnique(\nCan't reach database server at `localhost:5434`\n\nPlease make sure your database server is running at `localhost:5434`.\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:7615)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async Object.onLogin [as login] (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:114:18)","timestamp":"2025-07-15T18:54:18.957Z","username":"sweetyeetus"}
{"action":"update_player_balance","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","metadata":{"payout":null,"result":"lose"},"newBalance":null,"reason":"hand_lose","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.updatePlayerBalanceAfterGame (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:660:7)\n    at async Blackjack.stand (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:298:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:944:22)","timestamp":"2025-07-16T14:57:41.234Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"update_balance_after_game","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.updatePlayerBalanceAfterGame (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:660:7)\n    at async Blackjack.stand (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:298:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:944:22)","timestamp":"2025-07-16T14:57:41.234Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"update_player_balance","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","metadata":{"payout":null,"result":"lose"},"newBalance":null,"reason":"hand_lose","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.updatePlayerBalanceAfterGame (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:660:7)\n    at async Blackjack.stand (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:298:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:944:22)","timestamp":"2025-07-16T15:01:29.575Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"update_balance_after_game","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.updatePlayerBalanceAfterGame (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:660:7)\n    at async Blackjack.stand (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:298:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:944:22)","timestamp":"2025-07-16T15:01:29.575Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"update_player_balance","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","metadata":{"payout":null,"result":"push"},"newBalance":null,"reason":"hand_push","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.updatePlayerBalanceAfterGame (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:660:7)\n    at async Blackjack.stand (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:298:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:944:22)","timestamp":"2025-07-16T15:03:07.939Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"update_balance_after_game","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.updatePlayerBalanceAfterGame (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:660:7)\n    at async Blackjack.stand (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:298:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:944:22)","timestamp":"2025-07-16T15:03:07.939Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"update_player_balance","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","metadata":{"payout":null,"result":"win"},"newBalance":null,"reason":"hand_win","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.updatePlayerBalanceAfterGame (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:660:7)\n    at async Blackjack.stand (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:298:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:944:22)","timestamp":"2025-07-16T15:06:18.665Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"update_balance_after_game","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.updatePlayerBalanceAfterGame (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:660:7)\n    at async Blackjack.stand (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:298:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:944:22)","timestamp":"2025-07-16T15:06:18.665Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"update_player_balance","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","metadata":{"payout":null,"result":"win"},"newBalance":null,"reason":"hand_win","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.updatePlayerBalanceAfterGame (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:660:7)\n    at async Blackjack.stand (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:298:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:944:22)","timestamp":"2025-07-16T15:10:12.699Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"update_balance_after_game","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.updatePlayerBalanceAfterGame (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:660:7)\n    at async Blackjack.stand (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:298:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:944:22)","timestamp":"2025-07-16T15:10:12.699Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"update_player_balance","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","metadata":{},"newBalance":null,"reason":"double_down","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.doubleDown (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:327:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:948:22)","timestamp":"2025-07-16T17:57:40.400Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"player_action","actionType":"doubleDown","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.doubleDown (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:327:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:948:22)","timestamp":"2025-07-16T17:57:40.400Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"update_player_balance","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","metadata":{},"newBalance":null,"reason":"double_down","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.doubleDown (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:327:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:948:22)","timestamp":"2025-07-16T18:02:48.428Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"player_action","actionType":"doubleDown","category":"error","environment":"development","error":"\nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientValidationError: \nInvalid `prisma.player.update()` invocation in\nC:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:45\n\n  35 try {\n  36   const prisma = new PrismaClient()\n  37   \n→ 38   const updatedUser = await prisma.player.update({\n         where: {\n           id: \"cmclywqs300007ev5wzrgvt62\"\n         },\n         data: {\n       +   balance: Int\n         }\n       })\n\nArgument `balance` is missing.\n    at wn (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:29:1363)\n    at $n.handleRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6958)\n    at $n.handleAndLogRequestError (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6623)\n    at $n.request (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:121:6307)\n    at async l (C:\\Src\\fulldeck\\backend\\node_modules\\@prisma\\client\\runtime\\library.js:130:9633)\n    at async updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:38:25)\n    at async Blackjack.doubleDown (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:327:5)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:948:22)","timestamp":"2025-07-16T18:02:48.428Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"update_player_balance","category":"error","environment":"development","error":"Cannot find module '../websocket/balanceWebSocket'\nRequire stack:\n- C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js\n- C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js\n- C:\\Src\\fulldeck\\backend\\src\\games\\GameManager.js\n- C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js\n- C:\\Src\\fulldeck\\backend\\src\\websocket\\server.js\n- C:\\Src\\fulldeck\\backend\\app.js","level":"error","message":"Error occurred","metadata":{"betAmount":100},"newBalance":3800,"reason":"bet_placed","service":"fulldeck-backend","stack":"Error: Cannot find module '../websocket/balanceWebSocket'\nRequire stack:\n- C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js\n- C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js\n- C:\\Src\\fulldeck\\backend\\src\\games\\GameManager.js\n- C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js\n- C:\\Src\\fulldeck\\backend\\src\\websocket\\server.js\n- C:\\Src\\fulldeck\\backend\\app.js\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1401:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1057:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1062:22)\n    at Function._load (node:internal/modules/cjs/loader:1211:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)\n    at require (node:internal/modules/helpers:135:16)\n    at updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:53:23)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:921:9)","timestamp":"2025-07-16T18:55:43.040Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"player_action","actionType":"bet","category":"error","environment":"development","error":"Cannot find module '../websocket/balanceWebSocket'\nRequire stack:\n- C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js\n- C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js\n- C:\\Src\\fulldeck\\backend\\src\\games\\GameManager.js\n- C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js\n- C:\\Src\\fulldeck\\backend\\src\\websocket\\server.js\n- C:\\Src\\fulldeck\\backend\\app.js","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"Error: Cannot find module '../websocket/balanceWebSocket'\nRequire stack:\n- C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js\n- C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js\n- C:\\Src\\fulldeck\\backend\\src\\games\\GameManager.js\n- C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js\n- C:\\Src\\fulldeck\\backend\\src\\websocket\\server.js\n- C:\\Src\\fulldeck\\backend\\app.js\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1401:15)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1057:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1062:22)\n    at Function._load (node:internal/modules/cjs/loader:1211:37)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)\n    at require (node:internal/modules/helpers:135:16)\n    at updatePlayerBalance (C:\\Src\\fulldeck\\backend\\src\\shared\\utils.js:53:23)\n    at async Object.onPlayerAction [as playerAction] (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:921:9)","timestamp":"2025-07-16T18:55:43.040Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"player_action","actionType":"bet","category":"error","environment":"development ","error":"testLogger.logBackend is not a function","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"TypeError: testLogger.logBackend is not a function\n    at Blackjack.startNewGame (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:346:18)\n    at onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:904:38)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-18T18:16:44.780Z","userId":"cmclywqs300007ev5wzrgvt62"}
{"action":"get_player_by_username","category":"error","environment":"development","error":"\nInvalid `prisma.player.findUnique()` invocation in\n/mnt/c/src/fulldeck/backend/src/shared/utils/DBUtils.js:27:40\n\n  24 \n  25 const getPlayerByUsername = async (username) => {\n  26   try {\n→ 27     const player = await prisma.player.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:8\n   | \n 7 |   provider = \"postgresql\"\n 8 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"PrismaClientInitializationError: \nInvalid `prisma.player.findUnique()` invocation in\n/mnt/c/src/fulldeck/backend/src/shared/utils/DBUtils.js:27:40\n\n  24 \n  25 const getPlayerByUsername = async (username) => {\n  26   try {\n→ 27     const player = await prisma.player.findUnique(\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:8\n   | \n 7 |   provider = \"postgresql\"\n 8 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1\n    at $n.handleRequestError (/mnt/c/src/fulldeck/backend/node_modules/@prisma/client/runtime/library.js:121:7615)\n    at $n.handleAndLogRequestError (/mnt/c/src/fulldeck/backend/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/mnt/c/src/fulldeck/backend/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/mnt/c/src/fulldeck/backend/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async Object.getPlayerByUsername (/mnt/c/src/fulldeck/backend/src/shared/utils/DBUtils.js:27:20)\n    at async addBalance (/mnt/c/src/fulldeck/backend/add_balance.js:6:20)","timestamp":"2025-07-18T19:42:04.202Z","username":"sweetyeetus"}
{"action":"player_action","actionType":"bet","category":"error","environment":"development ","error":"profit is not defined","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"ReferenceError: profit is not defined\n    at Blackjack.startNewGame (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:334:16)\n    at onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:869:38)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-21T20:25:03.831Z","userId":"cmddh4q7h0000xcdu0yxsqws9"}
{"action":"player_action","actionType":"skipInsurance","category":"error","environment":"development ","error":"user is not defined","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"ReferenceError: user is not defined\n    at Blackjack.skipInsurance (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:689:49)\n    at async onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:958:22)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-21T20:25:58.942Z","userId":"cmddh4q7h0000xcdu0yxsqws9"}
{"action":"player_action","actionType":"skipInsurance","category":"error","environment":"development ","error":"user is not defined","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"ReferenceError: user is not defined\n    at Blackjack.skipInsurance (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:689:49)\n    at async onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:958:22)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-21T20:25:59.974Z","userId":"cmddh4q7h0000xcdu0yxsqws9"}
{"action":"player_action","actionType":"skipInsurance","category":"error","environment":"development ","error":"user is not defined","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"ReferenceError: user is not defined\n    at Blackjack.skipInsurance (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:689:49)\n    at async onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:958:22)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-21T20:26:00.526Z","userId":"cmddh4q7h0000xcdu0yxsqws9"}
{"action":"player_action","actionType":"skipInsurance","category":"error","environment":"development ","error":"user is not defined","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"ReferenceError: user is not defined\n    at Blackjack.skipInsurance (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:689:49)\n    at async onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:958:22)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-21T20:26:00.806Z","userId":"cmddh4q7h0000xcdu0yxsqws9"}
{"action":"player_action","actionType":"skipInsurance","category":"error","environment":"development ","error":"user is not defined","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"ReferenceError: user is not defined\n    at Blackjack.skipInsurance (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:689:49)\n    at async onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:958:22)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-21T20:26:00.981Z","userId":"cmddh4q7h0000xcdu0yxsqws9"}
{"action":"player_action","actionType":"skipInsurance","category":"error","environment":"development ","error":"user is not defined","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"ReferenceError: user is not defined\n    at Blackjack.skipInsurance (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:689:49)\n    at async onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:958:22)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-21T20:26:01.134Z","userId":"cmddh4q7h0000xcdu0yxsqws9"}
{"action":"player_action","actionType":"skipInsurance","category":"error","environment":"development ","error":"user is not defined","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"ReferenceError: user is not defined\n    at Blackjack.skipInsurance (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:689:49)\n    at async onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:958:22)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-21T20:26:01.274Z","userId":"cmddh4q7h0000xcdu0yxsqws9"}
{"action":"player_action","actionType":"skipInsurance","category":"error","environment":"development ","error":"user is not defined","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"ReferenceError: user is not defined\n    at Blackjack.skipInsurance (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:689:49)\n    at async onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:958:22)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-21T20:26:01.417Z","userId":"cmddh4q7h0000xcdu0yxsqws9"}
{"action":"player_action","actionType":"skipInsurance","category":"error","environment":"development ","error":"user is not defined","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"ReferenceError: user is not defined\n    at Blackjack.skipInsurance (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:689:49)\n    at async onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:958:22)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-21T20:26:01.533Z","userId":"cmddh4q7h0000xcdu0yxsqws9"}
{"action":"player_action","actionType":"skipInsurance","category":"error","environment":"development ","error":"user is not defined","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"ReferenceError: user is not defined\n    at Blackjack.skipInsurance (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:689:49)\n    at async onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:958:22)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-21T20:26:01.700Z","userId":"cmddh4q7h0000xcdu0yxsqws9"}
{"action":"player_action","actionType":"skipInsurance","category":"error","environment":"development ","error":"user is not defined","level":"error","message":"Error occurred","service":"fulldeck-backend","stack":"ReferenceError: user is not defined\n    at Blackjack.skipInsurance (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:689:49)\n    at async onPlayerAction (C:\\Src\\fulldeck\\backend\\src\\games\\blackjack\\Blackjack.js:958:22)\n    at async handleAuthenticatedMessage (C:\\Src\\fulldeck\\backend\\src\\websocket\\messages.js:80:12)","timestamp":"2025-07-21T20:26:02.306Z","userId":"cmddh4q7h0000xcdu0yxsqws9"}
