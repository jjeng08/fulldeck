generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id            String   @id @default(cuid())
  username      String   @unique
  email         String?  @unique
  phoneNumber   String?
  passwordHash  String   @map("password_hash") @db.VarChar(255)
  balance       Int      @default(0)
  winnings      Int      @default(0)
  emailVerified Boolean  @default(false)
  isActive      Boolean  @default(true)
  createdOn     DateTime @default(now())
  lastSeen      DateTime @default(now())
  
  accountsLogs AccountsLogs[]
  blackjackLogs BlackjackLogs[]
  
  @@index([username])
  @@map("players")
}

model AccountsLogs {
  id           String   @id @default(cuid())
  playerId     String
  gameType     Int?     // 1=blackjack, 2=poker, 3=baccarat - null for non-game activities
  gameId       String?  // Links to specific game instance - null for non-game activities
  actionId     String?  // Links to BlackjackLogs.id for game actions - null for non-game activities
  credit       Int?
  debit        Int?
  balance      Int
  winnings     Int?
  createdOn    DateTime @default(now())
  
  player Player @relation(fields: [playerId], references: [id])
  
  @@map("accounts_logs")
}

model BlackjackLogs {
  id            String   @id @default(cuid())
  gameId        String   // Links to Game and AccountsLogs entries
  playerId      String
  action        String   // "hit", "stand", "double_down", "split"
  result        String   // "bust", "continue", "stand", "complete"
  handIndex     Int
  handValue     Int
  betAmount     Int
  cards         String   // "8♠,8♥,7♣"
  dealerShowing String?  // "5♥"
  totalHands    Int
  createdOn     DateTime @default(now())
  
  player Player @relation(fields: [playerId], references: [id])
  
  @@map("blackjack_logs")
}